.SUFFIXES:
.SECONDARY:
SHELL = /bin/sh

include $(ROOT)/config.mk

$(ROOT)/config.mk:
	@cd $(ROOT) && $(MAKE) config.mk

ifndef LLVMBACKENDSHEADERS
   $(error Please set environment variable LLVMBACKENDSHEADERS)
endif

ifndef LLVMBACKENDS
   $(error Please set environment variable LLVMBACKENDS)
endif

ifndef SYSTEMCFRONTEND
   $(error Please set environment variable SYSTEMCFRONTEND)
endif

ifndef SYSTEMCROOT
   $(error Please set environment variable SYSTEMCROOT)
endif
SYSTEMC = $(SYSTEMCROOT)

# guess target os name used by systemc's configure
# translate it to what SystemC expects.
ARCH = $(shell $(SYSTEMC)/config/config.guess | sed -e 's/x86_64-.*-linux-gnu/linux64/' -e 's/i.86-.*-linux-gnu/linux/')

CXX = g++
CPPFLAGS = -MMD -MP -MF $(basename $@).d
CXXFLAGS = -g -Wall -Winvalid-pch

CC = gcc
CFLAGS = -g -Wall

LD = $(CXX)
LDFLAGS = $(CXXFLAGS)
LDLIBS  = -L/usr/X11R6/lib -lX11

RM = -rm -f

OBJS = $(SRCS:%.cpp=%.o)
DEPS = $(SRCS:%.cpp=%.d)

.PHONY: $(MODULE)
$(MODULE): $(TARGET)

ifdef MODULE
.PHONY: clean
clean:
	$(RM) *.d *.o $(TARGET)
endif

%.o: %.cpp # $(filter-out %.d, $(MAKEFILE_LIST))
	$(CXX) -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS) $(CXXFLAGS.$*)

# "user-friendly" output of make for commands the students may not
# know:
%.a: $(OBJS)
	@echo "[$(MODULE)] creating static lib $@..."
	@ar cru $@ $^
	@ranlib $@

%.gch: % $(filter-out %.d, $(MAKEFILE_LIST))
	@echo "[$(MODULE)] pre-compiling $<..."
	@$(RM) $@
	@$(CXX) -x c++-header -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS)

%.d: ;

# Include dependency files
-include $(DEPS)
